cmake_minimum_required(VERSION 3.21)
project(libscanmem)
include(CheckIncludeFiles)
include(CheckSymbolExists)
include(TestBigEndian)

set(CMAKE_C_STANDARD 17)
set(CMAKE_C_STANDARD_REQUIRED ON)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# Libscanmem requirements
check_include_files("stdbool.h;fcntl.h;limits.h;stddef.h;sys/ioctl.h;sys/time.h" HAVE_REQ_INCLUDES)
if(NOT HAVE_REQ_INCLUDES)
	message(FATAL_ERROR "Missing required includes!")
endif()
check_symbol_exists(getline "stdio.h" HAVE_GETLINE)
if(NOT HAVE_GETLINE)
	message(FATAL_ERROR "getline() not found! Aborting.")
endif()
check_symbol_exists(malloc "stdlib.h" HAVE_MALLOC)
if(NOT HAVE_MALLOC)
	message(FATAL_ERROR "malloc() not found! Aborting.")
endif()
check_symbol_exists(realloc "stdlib.h" HAVE_REALLOC)
if(NOT HAVE_REALLOC)
	message(FATAL_ERROR "realloc() not found! Aborting.")
endif()
check_symbol_exists(alloca "alloca.h" HAVE_ALLOCA)
if(NOT HAVE_ALLOCA)
	message(FATAL_ERROR "alloca() not found! Aborting.")
endif()
check_symbol_exists(strtod "stdlib.h" HAVE_STRTOD)
if(NOT HAVE_STRTOD)
	message(FATAL_ERROR "strtod() not found! Aborting.")
endif()

if(NOT APPLE)
	if(NOT EXISTS "/proc/self/maps")
		message(FATAL_ERROR "This system does not seem to have /proc/pid/maps files.")
	elseif(NOT EXISTS "/proc/self/mem")
		message(FATAL_ERROR "This system does not seem to have /proc/pid/mem files.")
	endif()
endif(NOT APPLE)

file(GLOB SOURCES ${CMAKE_SOURCE_DIR}/*.c)
add_library(scanmem SHARED ${SOURCES})

test_big_endian(IS_BIG_ENDIAN)
if(IS_BIG_ENDIAN)
	target_compile_definitions(scanmem PRIVATE -DWORDS_BIGENDIAN)
endif()

if(APPLE)
	target_compile_definitions(scanmem PRIVATE -DMACOS)
endif(APPLE)

target_compile_options(scanmem PRIVATE -Wall)
